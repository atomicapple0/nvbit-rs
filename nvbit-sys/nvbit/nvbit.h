#pragma once
// contains definitions such as a `rust::Vec`.
#include "rust/cxx.h"

// order is important: nvbit.h must go before cuda.h
#include "nvbit-sys/nvbit_release/core/nvbit.h"
// order is important: cuda.h must go after nvbit.h
/* #include "nvbit-sys/nvbit_release/core/cuda.h" */

/* #include "nvbit-sys/nvbit_release/core/utils/utils.h" */
/* #include "nvbit-sys/nvbit_release/core/utils/channel.hpp" */
#include <cstddef>
#include <vector>

// we forgot this for a long time
// this file is generated by cxx and contains the shared types between the FFI
// boundary
// includes the header files that are include!(.. in lib.rs
#include "nvbit-sys/src/nvbit.rs.h"

std::unique_ptr<std::vector<CUfunctionShim>> rust_nvbit_get_related_functions(
    CUcontext ctx, CUfunction func
);

std::unique_ptr<std::vector<InstrShim>> rust_nvbit_get_instrs(
    CUcontext ctx, CUfunction func
);
